---
export interface Props {
  title?: string;
  subtitle?: string;
  primaryCTA?: string;
  secondaryCTA?: string;
  primaryCTALink?: string;
  secondaryCTALink?: string;
  heroImage?: string;
  stats?: Array<{
    value: string;
    label: string;
  }>;
}

const {
  title = "KI-Automatisierung für den deutschen Mittelstand",
  subtitle = "Steigern Sie Ihre Effizienz um bis zu 40% mit maßgeschneiderten KI-Lösungen. Automatisieren Sie repetitive Aufgaben und fokussieren Sie sich auf Ihr Kerngeschäft.",
  primaryCTA = "Kostenlose Strategieberatung",
  secondaryCTA = "Live-Demo ansehen",
  primaryCTALink = "#contact",
  secondaryCTALink = "#demo",
  heroImage = "/images/hero/hero-placeholder.svg",
  stats = [
    { value: "40%", label: "Effizienzsteigerung" },
    { value: "60h", label: "Zeitersparnis/Monat" },
    { value: "200+", label: "Zufriedene Kunden" }
  ]
} = Astro.props;
---

<section class="relative bg-gradient-to-br from-blue-50 via-white to-primary-50 py-20 lg:py-32 overflow-hidden">
  <!-- Background Pattern -->
  <div class="absolute inset-0 opacity-5">
    <div class="absolute inset-0" style="
      background-image: radial-gradient(circle at 2px 2px, #1E3A8A 1px, transparent 0);
      background-size: 32px 32px;
    "></div>
  </div>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 lg:gap-20 items-center">
      
      <!-- Content Column -->
      <div class="text-center lg:text-left animate-slide-up">
        <h1 class="text-4xl sm:text-5xl lg:text-6xl font-serif font-bold text-gray-900 mb-6 leading-tight">
          <span class="block">{title.split(" ").slice(0, 2).join(" ")}</span>
          <span class="text-primary-600 block">{title.split(" ").slice(2).join(" ")}</span>
        </h1>
        
        <p class="text-xl text-gray-600 mb-8 max-w-2xl mx-auto lg:mx-0 leading-relaxed">
          {subtitle}
        </p>

        <!-- CTA Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start mb-12">
          <a 
            href={primaryCTALink}
            class="group bg-primary-600 text-white px-8 py-4 rounded-lg hover:bg-primary-700 transition-all duration-300 font-medium text-lg shadow-lg hover:shadow-xl transform hover:-translate-y-1 focus:outline-none focus:ring-4 focus:ring-primary-200"
            aria-label={primaryCTA}
          >
            <span class="flex items-center justify-center gap-2">
              {primaryCTA}
              <svg class="w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
              </svg>
            </span>
          </a>
          
          <a 
            href={secondaryCTALink}
            class="group border-2 border-primary-600 text-primary-600 px-8 py-4 rounded-lg hover:bg-primary-50 transition-all duration-300 font-medium text-lg focus:outline-none focus:ring-4 focus:ring-primary-200"
            aria-label={secondaryCTA}
          >
            <span class="flex items-center justify-center gap-2">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h.01M12 5a9 9 0 019 9 9 9 0 01-9 9 9 9 0 01-9-9 9 9 0 019-9z"></path>
              </svg>
              {secondaryCTA}
            </span>
          </a>
        </div>

        <!-- Stats -->
        <div class="grid grid-cols-3 gap-8 pt-8 border-t border-gray-200">
          {stats.map((stat, index) => (
            <div class="text-center" style={`animation-delay: ${index * 100}ms`}>
              <div class="text-2xl sm:text-3xl font-bold text-primary-600 mb-1 animate-counter">
                {stat.value}
              </div>
              <div class="text-sm text-gray-600 font-medium">
                {stat.label}
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Image Column -->
      <div class="relative">
        <!-- Main Hero Image -->
        <div class="relative z-10 animate-fade-in" style="animation-delay: 300ms">
          <img 
            src={heroImage}
            alt="KI-Automatisierung Dashboard für deutsche Unternehmen"
            class="w-full h-auto rounded-2xl shadow-2xl"
            loading="eager"
            width="600"
            height="400"
          />
          
          <!-- Floating Elements -->
          <div class="absolute -top-4 -right-4 bg-white rounded-lg shadow-lg p-4 animate-fade-in" style="animation-delay: 600ms">
            <div class="flex items-center gap-3">
              <div class="w-3 h-3 bg-green-500 rounded-full animate-pulse"></div>
              <span class="text-sm font-medium text-gray-700">Live Automatisierung</span>
            </div>
          </div>
          
          <div class="absolute -bottom-4 -left-4 bg-white rounded-lg shadow-lg p-4 animate-fade-in" style="animation-delay: 900ms">
            <div class="text-center">
              <div class="text-lg font-bold text-primary-600">€50.000+</div>
              <div class="text-sm text-gray-600">Jährliche Ersparnis</div>
            </div>
          </div>
        </div>

        <!-- Background Decorative Elements -->
        <div class="absolute inset-0 -z-10">
          <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-80 h-80 bg-primary-100 rounded-full blur-3xl opacity-30"></div>
          <div class="absolute top-1/4 right-1/4 w-32 h-32 bg-secondary-100 rounded-full blur-2xl opacity-40"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- Scroll Indicator -->
  <div class="absolute bottom-8 left-1/2 -translate-x-1/2 animate-bounce">
    <a href="#trust-bar" class="text-gray-400 hover:text-primary-600 transition-colors" aria-label="Scroll to next section">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
      </svg>
    </a>
  </div>
</section>

<style>
  @keyframes counter {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-counter {
    animation: counter 0.8s ease-out forwards;
  }
</style>