---
export interface Props {
  title?: string;
  subtitle?: string;
  steps?: Array<{
    number: number;
    title: string;
    description: string;
    details: string[];
    duration: string;
    icon: string;
  }>;
}

const {
  title = "So funktioniert unsere Zusammenarbeit",
  subtitle = "Ein transparenter 4-Schritt-Prozess für Ihre erfolgreiche KI-Automatisierung",
  steps = [
    {
      number: 1,
      title: "Analyse & Beratung",
      description: "Wir analysieren Ihre aktuellen Prozesse und identifizieren das größte Automatisierungspotential.",
      details: [
        "Kostenlose Erstberatung (30 Min.)",
        "Detaillierte Prozessanalyse",
        "ROI-Kalkulation und Machbarkeitsstudie",
        "Individuelles Lösungskonzept"
      ],
      duration: "1-2 Wochen",
      icon: "analysis"
    },
    {
      number: 2,
      title: "Planung & Design",
      description: "Gemeinsam entwickeln wir das optimale Design für Ihre maßgeschneiderte KI-Lösung.",
      details: [
        "Technische Spezifikation",
        "Prototyp Entwicklung",
        "Integrationsstrategie",
        "Projekt-Roadmap mit Meilensteinen"
      ],
      duration: "2-3 Wochen",
      icon: "design"
    },
    {
      number: 3,
      title: "Entwicklung & Integration",
      description: "Unser Expertenteam entwickelt und integriert Ihre KI-Lösung in bestehende Systeme.",
      details: [
        "Kontinuierliche Tests und Qualitätssicherung",
        "Nahtlose Integration ohne Betriebsunterbrechung",
        "Ausführliche Dokumentation"
      ],
      duration: "4-12 Wochen",
      icon: "development"
    },
    {
      number: 4,
      title: "Training & Support",
      description: "Wir schulen bei Bedarf Ihr Team und bieten monatlichen Vollsupport für einen reibungslosen Start.",
      details: [
        "Umfassende Mitarbeiterschulungen",
        "Go-Live Support und Begleitung",
        "Optionale ergänzende Services verfügbar"
      ],
      duration: "bis zu 6 Monate",
      icon: "support"
    }
  ],
  additionalServices = [
    {
      title: "Teamtraining",
      subtitle: "Zusätzliches Service-Paket",
      description: "Umfassende Schulung Ihres Teams für den optimalen Umgang mit KI-Automatisierungslösungen.",
      features: [
        "Mitarbeiterschulungen",
        "Best-Practice Workshops", 
        "Individuelle Betreuung",
        "Schulungsunterlagen"
      ],
      price: "€699 - €1.600",
      duration: "2-7 Tage",
      icon: "training"
    },
    {
      title: "Advisory-Retainer",
      subtitle: "Monatlicher Service",
      description: "Kontinuierliche strategische Beratung und Optimierung Ihrer KI-Automatisierungsstrategie.",
      features: [
        "Strategische Beratung",
        "Performance Monitoring",
        "Kontinuierliche Optimierung",
        "Priority Support"
      ],
      price: "€499 - €1.500 pro Monat",
      duration: "Laufend",
      icon: "advisory"
    }
  ]
} = Astro.props;
---

<section id="process" class="py-10 sm:py-12 bg-white relative overflow-hidden">

  <div class="max-w-8xl mx-auto px-3 sm:px-4 md:px-6 lg:px-12 xl:px-16 relative">
    
    <!-- Section Header -->
    <div class="text-center mb-10 sm:mb-12 md:mb-16 animate-slide-up px-4">
      <h2 class="text-2xl sm:text-3xl md:text-4xl font-bold text-gray-900 mb-3 sm:mb-4">
        {title}
      </h2>
      <p class="text-base sm:text-lg md:text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
        {subtitle}
      </p>
    </div>

    <!-- Process Timeline -->
    <div class="relative">
      <!-- Steps Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4 md:gap-6 max-w-6xl mx-auto px-2 sm:px-3 md:px-4">
        {steps.map((step, index) => (
          <div 
            class="relative group animate-fade-in-up"
            style={`animation-delay: ${(index + 1) * 200}ms`}
          >
            <!-- Step Card -->
            <div class="bg-gray-50 rounded-xl p-4 sm:p-5 md:p-6 pb-6 sm:pb-8 shadow-sm hover:shadow-md transition-all duration-300 border border-gray-200 h-full relative flex flex-col">
              
              <!-- Header with Number and Icon -->
              <div class="flex justify-between items-start mb-4">
                <!-- Step Number - Top Left -->
                <div class="w-10 h-10 sm:w-12 sm:h-12 bg-orange-600 text-white rounded-full flex items-center justify-center font-bold text-lg shadow-sm">
                  {step.number}
                </div>
                
                <!-- Icon - Top Right -->
                <div class="w-12 h-12 sm:w-14 sm:h-14 bg-gray-100 rounded-lg flex items-center justify-center">
                  {step.icon === 'analysis' && (
                    <svg class="w-6 h-6 sm:w-7 sm:h-7 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                    </svg>
                  )}
                  
                  {step.icon === 'design' && (
                    <svg class="w-6 h-6 sm:w-7 sm:h-7 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM7 3H5a2 2 0 00-2 2v12a4 4 0 004 4h2a2 2 0 002-2V5a2 2 0 00-2-2H7z"/>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 14l2-2-2-2M21 12H9"/>
                    </svg>
                  )}
                  
                  {step.icon === 'development' && (
                    <svg class="w-6 h-6 sm:w-7 sm:h-7 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"/>
                    </svg>
                  )}
                  
                  {step.icon === 'support' && (
                    <svg class="w-6 h-6 sm:w-7 sm:h-7 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192L5.636 18.364M12 2.25a9.75 9.75 0 109.75 9.75A9.75 9.75 0 0012 2.25z"/>
                    </svg>
                  )}
                </div>
              </div>

              <!-- Content -->
              <div class="flex-grow flex flex-col">
                <!-- Title Section with fixed height -->
                <div class="h-18 sm:h-20 flex items-start mb-3">
                  <h3 class="text-base sm:text-lg font-bold text-gray-900 leading-tight">
                    {step.title}
                  </h3>
                </div>
                
                <!-- Description Section with fixed height -->
                <div class="h-32 sm:h-36 flex items-start mb-4">
                  <p class="text-sm sm:text-base text-gray-600 leading-relaxed">
                    {step.description}
                  </p>
                </div>
                
                <!-- Duration Badge -->
                <div class="inline-flex items-center gap-2 bg-gray-100 text-gray-600 px-3 py-1 rounded-full text-xs sm:text-sm font-medium mb-4">
                  <svg class="w-3 h-3 sm:w-4 sm:h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                  </svg>
                  {step.duration}
                </div>
              </div>

              <!-- Details List -->
              <div class="mt-auto pb-2">
                <!-- Details Header with fixed height -->
                <div class="h-6 flex items-start mb-3">
                  <h4 class="font-semibold text-gray-900 text-xs sm:text-sm">Beinhaltet:</h4>
                </div>
                
                <!-- Details List with fixed height -->
                <div class="h-36 sm:h-40 flex flex-col justify-start">
                  {step.details.map((detail) => (
                    <div class="flex items-start gap-2 text-xs sm:text-sm mb-2">
                      <div class="w-1 h-1 sm:w-1.5 sm:h-1.5 bg-orange-500 rounded-full flex-shrink-0 mt-1.5 sm:mt-2"></div>
                      <span class="text-gray-600">{detail}</span>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Additional Services Section -->
    <div class="mt-12 sm:mt-16 md:mt-20">
      <div class="text-center mb-12">
        <h3 class="text-2xl sm:text-3xl font-bold text-gray-900 mb-4">
          Ergänzende Service-Pakete
        </h3>
        <p class="text-lg text-gray-600 max-w-2xl mx-auto">
          Erweitern Sie Ihre KI-Automatisierung mit zusätzlichen Services für maximalen Erfolg
        </p>
      </div>

      <!-- Additional Services -->
      <div class="max-w-5xl mx-auto">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-12">
          {additionalServices.map((service, index) => (
            <div class="bg-white rounded-2xl p-6 shadow-sm hover:shadow-md transition-all duration-300 border border-gray-200 relative overflow-hidden">
              
              <!-- Service Badge -->
              <div class="absolute top-4 right-4">
                <span class="bg-orange-100 text-orange-700 px-3 py-1 rounded-full text-xs font-medium">
                  {service.subtitle}
                </span>
              </div>

              <!-- Icon -->
              <div class="mb-4">
                <div class="w-12 h-12 bg-gradient-to-br from-gray-900 to-gray-800 rounded-xl flex items-center justify-center">
                  {service.icon === 'check' && (
                    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                  )}
                  {service.icon === 'automation' && (
                    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                    </svg>
                  )}
                  {service.icon === 'training' && (
                    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
                    </svg>
                  )}
                  {service.icon === 'advisory' && (
                    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
                    </svg>
                  )}
                </div>
              </div>

              <!-- Content -->
              <div class="mb-4">
                <h4 class="text-lg font-bold text-gray-900 mb-2">
                  {service.title}
                </h4>
                <p class="text-gray-600 leading-relaxed mb-4 text-sm">
                  {service.description}
                </p>

                <!-- Features -->
                <div class="space-y-2 mb-4">
                  {service.features.map((feature) => (
                    <div class="flex items-center gap-2">
                      <div class="w-1.5 h-1.5 bg-gray-700 rounded-full flex-shrink-0"></div>
                      <span class="text-xs text-gray-700">{feature}</span>
                    </div>
                  ))}
                </div>

                <!-- Pricing & Duration -->
                <div class="pt-4 border-t border-gray-200">
                  <div class="flex items-center justify-between mb-3">
                    <div class="text-lg font-bold text-gray-900">
                      {service.price}
                    </div>
                    <div class="flex items-center gap-1 text-xs text-gray-600">
                      <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                      </svg>
                      {service.duration}
                    </div>
                  </div>
                  <a 
                    href="/#final-cta" 
                    class="w-full bg-gradient-to-br from-orange-500 to-orange-700 text-white px-4 py-2 rounded-lg hover:from-orange-600 hover:to-orange-800 transition-all duration-200 font-medium text-sm shadow-lg cta-button inline-block text-center"
                  >
                    Anfragen
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Consistent CTA button animation */
  .cta-button {
    transform-origin: center;
    transition: transform 0.2s ease, background-color 0.2s ease;
    will-change: transform;
    backface-visibility: hidden;
  }
  
  .cta-button:hover {
    transform: scale(1.02);
  }
  
  /* Pulse animation for step numbers */
  @keyframes pulse {
    0%, 100% {
      opacity: 0.2;
    }
    50% {
      opacity: 0.4;
    }
  }
</style>